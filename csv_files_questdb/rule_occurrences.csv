RuleId,RuleName,Occurrences,TDType
S1192,String literals should not be duplicated,5527,Design Debt
S6213,Restricted Identifiers should not be used as Identifiers,257,Design Debt
S117,Local variable and method parameter names should comply with a naming convention,234,Code Debt
S3776,Cognitive Complexity of methods should not be too high,215,Design Debt
S1611,Parentheses should be removed from a single lambda input parameter when its type is inferred,134,Code Debt
S1117,Local variables should not shadow class fields,117,Defect Debt
S115,Constant names should comply with a naming convention,106,Code Debt
S108,Nested blocks of code should not be left empty,106,Code Debt
S106,Standard outputs should not be used directly to log anything,93,Code Debt
S1121,Assignments should not be made from within sub-expressions,87,Code Debt
S1124,Modifiers should be declared in the correct order,77,Code Debt
S112,Generic exceptions should never be thrown,74,Defect Debt
S1186,Methods should not be empty,69,Defect Debt
S1135,"Track uses of TODO"" tags""",64,Documentation Debt
S107,Methods should not have too many parameters,37,Design Debt
S125,Sections of code should not be commented out,36,Code Debt
S2696,"Instance methods should not write to static"" fields""",32,Code Debt
S1141,Try-catch blocks should not be nested,31,Code Debt
S1450,Private fields only used as local variables in methods should become local variables,31,Code Debt
S1854,Unused assignments should be removed,30,Code Debt
S4144,Methods should not have identical implementations,26,Design Debt
S1066,"Collapsible if"" statements should be merged""",24,Design Debt
S100,Method names should comply with a naming convention,21,Code Debt
S4274,Asserts should not be used to check the parameters of a public method,20,Defect Debt
S1170,"Public constants and fields initialized at declaration should be static final"" rather than merely ""final""""",20,Design Debt
S3878,Arrays should not be created for varargs parameters,16,Code Debt
S1104,Class variable fields should not have public accessibility,15,Desing Debt
S4042,"java.nio.Files#delete"" should be preferred""",14,Code Debt
S135,"Loops should not contain more than a single break"" or ""continue"" statement""",14,Code Debt
S1659,Multiple variables should not be declared on the same line,13,Code Debt
S116,Field names should comply with a naming convention,13,Code Debt
S1118,Utility classes should not have public constructors,12,Code Debt
S1444,"public static"" fields should be constant""",11,Code Debt
S2479,Whitespace and control characters in literals should be explicit,10,Code Debt
S1134,"Track uses of FIXME"" tags""",10,Documentation Debt
S127,"for"" loop stop conditions should be invariant""",10,Code Debt
S1155,Collection.isEmpty() should be used to test for emptiness,9,Test Debt
S2093,Try-with-resources should be used,8,Code Debt
S1172,Unused method parameters should be removed,8,Code Debt
S3252,"static"" base class members should not be accessed via derived types""",7,Code Debt
S3358,Ternary operators should not be nested,6,Design Debt
S1845,Methods and field names should not be the same or differ only by capitalization,5,Code Debt
S2386,"Mutable fields should not be public static""""",5,Code Debt
S131,"switch"" statements should have ""default"" clauses""",5,Code Debt
S3457,Printf-style format strings should be used correctly,4,Defect Debt
S2589,Boolean expressions should not be gratuitous,4,Defect Debt
S1130,"throws"" declarations should not be superfluous""",4,Code Debt
S1858,"toString()"" should never be called on a String object""",4,Defect Debt
S1602,Lambdas containing only one statement should not nest this statement in a block,4,Code Debt
S1481,Unused local variables should be removed,4,Code Debt
S5993,"Constructors of an abstract"" class should not be declared ""public""""",3,Code Debt
S1119,Labels should not be used,3,Code Debt
S1905,Redundant casts should not be used,3,Code Debt
S3010,Static fields should not be updated in constructors,3,Code Debt
S2065,"Fields in non-serializable classes should not be transient""""",3,Code Debt
S3008,Static non-final field names should comply with a naming convention,3,Code Debt
S1075,URIs should not be hardcoded,2,Code Debt
S4524,"default"" clauses should be last""",2,Code Debt
S5361,"String#replace"" should be preferred to ""String#replaceAll""""",2,Code Debt
S6035,Single-character alternations in regular expressions should be replaced with character classes,2,Code Debt
S2387,Child class fields should not shadow parent class fields,2,Design Debt
S3516,Methods returns should not be invariant,2,Code Debt
S1068,"Unused private"" fields should be removed""",2,Code Debt
S6353,Regular expression quantifiers and character classes should be used concisely,2,Code Debt
S1171,Only static class initializers should be used,2,Code Debt
S1871,Two branches in a conditional structure should not have exactly the same implementation,2,Design Debt
S1604,Anonymous inner classes containing only one method should become lambdas,2,Code Debt
S1149,"Synchronized classes Vector, Hashtable, Stack and StringBuffer should not be used",2,Code Debt
S2178,Short-circuit logic should be used in boolean contexts,2,Code Debt
S1301,"switch"" statements should have at least 3 ""case"" clauses""",2,Code Debt
S128,"Switch cases should end with an unconditional break"" statement""",2,Code Debt
S1199,Nested code blocks should not be used,2,Design Debt
S2234,Parameters should be passed in the correct order,1,Defect Debt
S1219,"switch"" statements should not contain non-case labels""",1,Defect Debt
S1185,Overriding methods should do more than simply call the same method in the super class,1,Design Debt
S1165,Exception classes should be immutable,1,Code Debt
S119,Type parameter names should comply with a naming convention,1,Code Debt
S5413,'List.remove()' should not be used in ascending 'for' loops,1,Code Debt
S1161,"@Override"" should be used on overriding and implementing methods""",1,Defect Debt
S1128,Unnecessary imports should be removed,1,Code Debt
S1110,Redundant pairs of parentheses should be removed,1,Code Debt
S3400,Methods should not return constants,1,Defect Debt
S1144,"Unused private"" methods should be removed""",1,Code Debt
S1994,"for"" loop increment clauses should modify the loops' counters""",1,Defect Debt
S2160,"Subclasses that add fields should override equals""""",1,Code Debt
S2692,"indexOf"" checks should not be for positive numbers""",1,Code Debt
S1168,Empty arrays and collections should be returned instead of null,1,Defect Debt
